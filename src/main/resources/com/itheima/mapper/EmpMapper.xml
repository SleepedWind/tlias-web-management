<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.mapper.EmpMapper">
    <!--根据ID更新员工信息-->
    <update id="updateEmp">
        update emp
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="job != null">job = #{job},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="image != null and image != ''">image = #{image},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteEmp">
        delete from emp where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <delete id="deleteEmpExpr">
        delete from emp_expr where emp_id in
        <foreach collection="ids" item="empId" open="(" separator="," close=")">
            #{empId}
        </foreach>
    </delete>
    <select id="findAllEmp" resultType="com.itheima.pojo.Emp">
        select e.*,d.name deptName from emp e left join dept d on e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                e.name like concat('%',#{name},'%')
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if><if test="begin != null and end != null">
                and entry_date between #{begin} and #{end}
            </if>
        </where>

    </select>
    <resultMap id="empResultMap" type="com.itheima.pojo.Emp">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="name" property="name" />
        <result column="gender" property="gender" />
        <result column="phone" property="phone" />
        <result column="job" property="job" />
        <result column="salary" property="salary" />
        <result column="image" property="image" />
        <result column="entry_date" property="entryDate" />
        <result column="dept_id" property="deptId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />

        <collection property="exprList" ofType="com.itheima.pojo.EmpExpr">
            <id column="ee_id" property="id"/>
            <result column="ee_company" property="company"/>
            <result column="ee_job" property="job"/>
            <result column="ee_begin" property="begin"/>
            <result column="ee_end" property="end"/>
            <result column="ee_empid" property="empId"/>
        </collection>
    </resultMap>
    <select id="selectEmpById" resultMap="empResultMap">

        select e.*,
        ee.id ee_id,
        ee.emp_id ee_empid,
        ee.begin ee_begin,
        ee.end ee_end,
        ee.company ee_company,
        ee.job ee_job
        from emp e left join emp_expr ee on e.id = ee.emp_id
        where e.id = #{id}
    </select>
    <select id="totalEmp" resultType="java.lang.Integer">
        select count(*) deptName from emp e left join dept d on e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                e.name like concat('%',#{name},'%')
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if><if test="begin != null and end != null">
            and entry_date between #{begin} and #{end}
        </if>
        </where>
    </select>

    <insert id="addEmp" >
        insert into emp
        <trim prefix="(" suffix=")" suffixOverrides=",">
            username,name,gender,phone,
            <if test="image != null and image != ''">image,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="entryDate != null">entry_date,</if>
            <if test="job != null">job,</if>
            <if test="salary != null">salary,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix=" values(" suffix=")" suffixOverrides=",">
            #{username},#{name},#{gender},#{phone},
            <if test="image != null and image != ''">#{image},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="entryDate != null">#{entryDate},</if>
            <if test="job != null">#{job},</if>
            <if test="salary != null">#{salary},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createTime != null">#{createTime}</if>
        </trim>
    </insert>
    
    <insert id="addEmpExpr">
        insert into emp_expr (emp_id, begin, end, company, job) values 
        <foreach collection="exprList" item="expr" separator=",">
            (#{expr.empId}, #{expr.begin}, #{expr.end}, #{expr.company}, #{expr.job})
        </foreach>
    </insert>
</mapper>